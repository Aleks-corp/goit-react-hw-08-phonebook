{"version":3,"file":"static/js/256.30c90ab6.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/PhonebookForm/PhonebookForm.styled.js","redux/contacts/selectors.js","components/PhonebookForm/PhonebookForm.jsx","components/ContactsItem/ContactsItem.styled.js","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactList.styled.js","components/Loader.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Container.styled.js","pages/PhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionContainer = styled.section`\n  padding: 15px 20px;\n  max-width: 480px;\n  min-width: 400px;\n  background-color: #fff;\n  border-radius: 20px;\n  margin-bottom: 10px;\n  background-color: #7fb3b9;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionContainer } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <SectionContainer>\n    <h2>{title}</h2>\n    {children}\n  </SectionContainer>\n);\n\nexport default Section;\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n  ]),\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: block;\n  max-width: 320px;\n  padding: 15px;\n  border: 1px solid #010101;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  min-width: 240px;\n\n  margin-bottom: 20px;\n  margin-right: 20px;\n`;\nexport const Button = styled.button`\n  display: block;\n  font-size: 16px;\n`;\n","export const selectContacts = state => state.contacts.contactsList;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterValue = state => state.filter.value;\n\nexport const selectFilteredContacts = ({ contacts, filter }) =>\n  filter.value.trim()\n    ? contacts.contactsList.filter(contact =>\n        contact.name.toLowerCase().includes(filter.value.toLowerCase().trim())\n      )\n    : contacts.contactsList;\n","import { useState } from 'react';\nimport { Form, Input, Button, Label } from './PhonebookForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport default function PhonebookForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputContactHandler = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const submitContactHandler = e => {\n    e.preventDefault();\n    const availableInContactsList = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n    if (availableInContactsList) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={submitContactHandler}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={inputContactHandler}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={inputContactHandler}\n        />\n      </Label>\n      <Button type=\"submit\">Add contacts</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Thumb = styled.span`\n  margin-right: 20px;\n`;\n","import { Thumb } from './ContactsItem.styled';\nimport PropTypes from 'prop-types';\n\nconst ContactsItem = ({ id, name, number, deleteContactItem }) => {\n  return (\n    <>\n      <Thumb>\n        {name}: {number}\n      </Thumb>\n      <button type=\"button\" onClick={() => deleteContactItem(id)}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContactItem: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  display: block;\n  margin-top: 20px;\n  height: 250px;\n  overflow-y: auto;\n  scrollbar-width: thin;\n  scrollbar-color: hsl(0 0% 50%);\n`;\n","import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Circles\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '20px',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\nexport default Loader;\n","import ContactsItem from 'components/ContactsItem/ContactsItem';\nimport { ContactsListItem, List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport Loader from 'components/Loader';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\n\nconst ContactsList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {error && <p>{error}. Please try again or reload page.</p>}\n      {isLoading && <Loader />}\n      {filteredContacts.length === 0 && !isLoading && !error && (\n        <h2>Your PhoneBook is empty</h2>\n      )}\n      {filteredContacts.length !== 0 && !isLoading && !error && (\n        <List>\n          {filteredContacts.map(contact => (\n            <ContactsListItem key={contact.id}>\n              <ContactsItem\n                id={contact.id}\n                name={contact.name}\n                number={contact.number}\n                deleteContactItem={id => dispatch(deleteContact(id))}\n              />\n            </ContactsListItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin-right: 30px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import { Input } from 'components/PhonebookForm/PhonebookForm.styled';\nimport { Label } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter, removeFilter } from 'redux/filterSlice';\nimport { selectFilterValue } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={e => dispatch(addFilter(e.target.value))}\n        />\n      </Label>\n      <button type=\"reset\" onClick={() => dispatch(removeFilter())}>\n        Clear filter\n      </button>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  font-size: 24px;\n  color: #010101;\n`;\n","import Section from '../components/Section/Section';\nimport PhonebookForm from '../components/PhonebookForm/PhonebookForm';\nimport ContactsList from '../components/ContactsList/ContactsList';\nimport Filter from '../components/Filter/Filter';\nimport { Container } from '../components/Container.styled';\n\nexport default function PhoneBook() {\n  return (\n    <Container>\n      <Section title=\"Add new contact\">\n        <PhonebookForm />\n      </Section>\n      <Section title=\"Contacts list\">\n        <Filter />\n        <ContactsList />\n      </Section>\n    </Container>\n  );\n}\n"],"names":["SectionContainer","styled","title","children","Form","Label","Input","Button","selectContacts","state","contacts","contactsList","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","value","selectFilteredContacts","trim","contact","name","toLowerCase","includes","PhonebookForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","inputContactHandler","e","target","reset","onSubmit","preventDefault","some","alert","addContact","type","pattern","required","onChange","Thumb","id","deleteContactItem","onClick","ContactsListItem","List","height","width","color","ariaLabel","wrapperStyle","justifyContent","alignItems","marginTop","wrapperClass","visible","filteredContacts","useEffect","fetchContacts","length","map","deleteContact","filterValue","addFilter","removeFilter","Container","PhoneBook"],"sourceRoot":""}